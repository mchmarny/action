name: build

on:
  workflow_call:
    inputs:
      registry:
        description: 'Image registry (e.g. gcr.io)'
        type: string
        required: false
        default: 'ghcr.io'
      go_version:
        description: 'Go version to use'
        required: false
        type: string
        default: '1.20.1'
    outputs:
      digest:
        value: ${{ jobs.build.outputs.digest }}

permissions:
  contents: read

jobs:
  build:
    outputs:
      digest: ${{ steps.image.outputs.digest }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      id-token: write
    steps:

    - name: Setup Go
      uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9  # v4.0.0
      with:
        go-version: "${{ inputs.go_version }}"

    - run: go version

    - name: Cache Go Modules
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8  # v3.3.1
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f  # v3.4.0

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Auth Docker
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install ko
      uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa  # v0.6

    - name: Authenticate ko
      env:
        AUTH_TOKEN: ${{ steps.auth.outputs.access_token }}
      run: |
        set -euo pipefail
        ko login "${{ inputs.registry }}/${{ github.repository }}"

    - name: Get Version
      run: |
        set -euo pipefail
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Build Image
      id: image
      env:
        KO_DOCKER_REPO: "${{ inputs.registry }}/${{ github.repository }}"
        GOFLAGS: "-ldflags=-X=main.version=${{ env.RELEASE_VERSION }}"
        KO_DEFAULTBASEIMAGE: cgr.dev/chainguard/static:latest
        COSIGN_EXPERIMENTAL: "true"
      run: |
        set -euo pipefail
        ko build cmd/server/main.go --image-refs .digest --bare --tags ${{ env.RELEASE_VERSION }}
        echo "digest=$(cat .digest)" >> "$GITHUB_OUTPUT"
